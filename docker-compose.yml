version: '3.9'


services:
  oncall-mysql:
    hostname: oncall-mysql
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=1234
    networks:
      - iris

  oncall-web:
    build:
      context: .
    hostname: oncall
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - DOCKER_DB_BOOTSTRAP=1
      - IRIS_API_HOST=iris
    volumes:
      - ./configs/config.docker.yaml:/home/oncall/config/config.yaml
    networks:
      - iris
    depends_on:
      - oncall-mysql

#  oncall-metrics:
#    build:
#      context: ./metrics/
#    ports:
#      - "8090:8090"
#    environment:
#      - HOST=oncall-web
#      - PORT=8090
#    networks:
#      - iris

  # oncall-prometheus:
  #   image: prom/prometheus:v2.36.0
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   networks:
  #     - iris

  # blackbox:
  #   image: prom/blackbox-exporter
  #   ports:
  #     - "9115:9115"
  #   restart: unless-stopped
  #   command:
  #     - "--config.file=/etc/blackbox/blackbox.yml"
  #   volumes:
  #     - ./blackbox.yml:/etc/blackbox/blackbox.yml
  #   networks:
  #     - iris
      
  # node-exporter:
  #   image: prom/node-exporter:v1.3.1
  #   ports:
  #     - "9100:9100"
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - '--path.procfs=/host/proc'
  #     - '--path.sysfs=/host/sys'
  #     - '--collector.filesystem.mount-points-exclude'
  #     - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
  #   networks:
  #     - iris

  # grafana:
  #   build: './grafana'
  #   container_name: 'grafana'
  #   ports:
  #     - '3000:3000'
  #   # environment:
  #   #  - GF_INSTALL_PLUGINS="Time series"
  #   networks:
  #     - iris

  # ********************************************************************************* 

  elasticsearch:
    image: elasticsearch:7.9.1
    container_name: elk-elasticsearch
    volumes:
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    restart: unless-stopped
    ports:
      - 9200:9200
    networks:
      - iris

  logstash:
    image: logstash:7.9.1
    container_name: elk-logstash
    restart: unless-stopped
    volumes:
      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      - elasticsearch
    networks:
      - iris

  filebeat:
    image: elastic/filebeat:7.9.1
    restart: unless-stopped
    depends_on:
      - elasticsearch
    volumes:
      - ./config/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs/:/logs/
    networks:
      - iris

  kibana:
    image: kibana:7.9.1
    restart: unless-stopped
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    networks:
      - iris

# **********************************************

volumes:
  grafana-data:
  grafana-configs:


networks:
  iris:
    name: iris
